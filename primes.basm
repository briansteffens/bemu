start:
    mov [rmem] 1
    mov [rmem+8] 2

    mov r0 1

check_next:
    add r0 2
    cmp r0 1000
    jge end

    mov r1 rmem
    add r1 8
    mov r2 [rmem]

    mov r3 r0
    div r3 2

    previous_next:
        cmp r2 0
        jle found_one

        cmp [r1] r3
        jg found_one

        mov r4 r0
        mod r4 [r1]
        cmp r4 0
        je check_next

        dec r2
        add r1 8

        jmp previous_next

    found_one:
        inc [rmem]
        mov r4 [rmem]
        mul r4 8
        add r4 rmem
        mov [r4] r0
        print r0

    jmp check_next

end:
    exit
